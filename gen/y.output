Terminals unused in grammar

   EXTERN
   STATIC
   AUTO
   REGISTER
   SHORT
   LONG
   SIGNED
   UNSIGNED
   DOUBLE
   CONST
   VOLATILE
   VOID
   ENUM
   ELLIPSIS
   CASE
   DEFAULT
   SWITCH
   DO
   FOR
   RETURN
   SIZEOF


State 68 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input statement

    3 statement: declaration_statement
    4          | jump_statement
    5          | expression_statement
    6          | error
    7          | selection_statement
    8          | iterative_statement
    9          | block_statement
   10          | label_stmt
   11          | type_definition

   12 label_stmt: IDENTIFIER ':'

   13 block_statement: begin_sub '{' input '}' end_sub

   14 begin_sub: /* empty */

   15 end_sub: /* empty */

   16 type_definition: aliasing ';'
   17                | compound_type ';'

   18 compound_type: type_type opt_typ_name '{' member_decl_list '}'
   19              | type_type IDENTIFIER

   20 type_type: STRUCT
   21          | UNION

   22 opt_typ_name: /* empty */
   23             | IDENTIFIER

   24 member_decl_list: member_decl opt_member_decl_list

   25 opt_member_decl_list: /* empty */
   26                     | member_decl_list

   27 member_decl: type_name id_list ';'

   28 id_list: IDENTIFIER
   29        | IDENTIFIER ',' id_list

   30 aliasing: TYPEDEF type_name IDENTIFIER

   31 expression_statement: expr ';'
   32                     | ';'

   33 jump_statement: CONTINUE ';'
   34               | BREAK ';'
   35               | GOTO IDENTIFIER ';'

   36 iterative_statement: while_loop

   37 while_loop: while_clause statement

   38 while_clause: WHILE '(' expr ')'

   39 selection_statement: if_clause statement
   40                    | if_clause statement else_clause statement

   41 if_clause: IF '(' expr ')'

   42 else_clause: ELSE

   43 declaration_statement: type_name var_dlist ';'

   44 var_dlist: var_definition ',' var_dlist
   45          | var_definition

   46 var_definition: symbol_name opt_init

   47 symbol_name: IDENTIFIER
   48            | symbol_name '[' CONSTANT ']'
   49            | '*' symbol_name
   50            | '(' symbol_name ')'

   51 type_name: INT
   52          | FLOAT
   53          | CHAR
   54          | compound_type
   55          | ALIAS_NAME

   56 opt_init: '=' expr
   57         | /* empty */

   58 primary_expr: CONSTANT
   59             | IDENTIFIER
   60             | '(' expr ')'

   61 expr: primary_expr
   62     | expr indexing
   63     | expr '.' IDENTIFIER
   64     | '!' expr
   65     | '~' expr
   66     | '-' expr
   67     | INC_OP expr
   68     | DEC_OP expr
   69     | '(' type_name ')' expr
   70     | '*' expr
   71     | expr '*' expr
   72     | expr '/' expr
   73     | expr '%' expr
   74     | expr '+' expr
   75     | expr '-' expr
   76     | expr LSHFT_OP expr
   77     | expr RSHFT_OP expr
   78     | expr '>' expr
   79     | expr '<' expr
   80     | expr LE_OP expr
   81     | expr GE_OP expr
   82     | expr EQ_OP expr
   83     | expr NE_OP expr
   84     | expr '|' expr
   85     | expr '^' expr
   86     | expr '&' expr
   87     | expr AND_OP expr
   88     | expr OR_OP expr
   89     | primary_expr '=' expr

   90 indexing: '[' expr ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 73
'&' (38) 86
'(' (40) 38 41 50 60 69
')' (41) 38 41 50 60 69
'*' (42) 49 70 71
'+' (43) 74
',' (44) 29 44
'-' (45) 66 75
'.' (46) 63
'/' (47) 72
':' (58) 12
';' (59) 16 17 27 31 32 33 34 35 43
'<' (60) 79
'=' (61) 56 89
'>' (62) 78
'[' (91) 48 90
']' (93) 48 90
'^' (94) 85
'{' (123) 13 18
'|' (124) 84
'}' (125) 13 18
'~' (126) 65
error (256) 6
OR_OP (258) 88
AND_OP (259) 87
EQ_OP (260) 82
NE_OP (261) 83
LE_OP (262) 80
GE_OP (263) 81
LSHFT_OP (264) 76
RSHFT_OP (265) 77
INC_OP (266) 67
DEC_OP (267) 68
TYPEDEF (268) 30
EXTERN (269)
STATIC (270)
AUTO (271)
REGISTER (272)
CHAR (273) 53
SHORT (274)
INT (275) 51
LONG (276)
SIGNED (277)
UNSIGNED (278)
FLOAT (279) 52
DOUBLE (280)
CONST (281)
VOLATILE (282)
VOID (283)
STRUCT (284) 20
UNION (285) 21
ENUM (286)
ELLIPSIS (287)
CASE (288)
DEFAULT (289)
SWITCH (290)
WHILE (291) 38
DO (292)
FOR (293)
GOTO (294) 35
CONTINUE (295) 33
BREAK (296) 34
RETURN (297)
SIZEOF (298)
CONSTANT (299) 48 58
IDENTIFIER (300) 12 19 23 28 29 30 35 47 59 63
ALIAS_NAME (301) 55
DEREF (302)
UMINUS (303)
IF (304) 41
ELSE (305) 42


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
input (75)
    on left: 1 2, on right: 0 2 13
statement (76)
    on left: 3 4 5 6 7 8 9 10 11, on right: 2 37 39 40
label_stmt (77)
    on left: 12, on right: 10
block_statement (78)
    on left: 13, on right: 9
begin_sub (79)
    on left: 14, on right: 13
end_sub (80)
    on left: 15, on right: 13
type_definition (81)
    on left: 16 17, on right: 11
compound_type (82)
    on left: 18 19, on right: 17 54
type_type (83)
    on left: 20 21, on right: 18 19
opt_typ_name (84)
    on left: 22 23, on right: 18
member_decl_list (85)
    on left: 24, on right: 18 26
opt_member_decl_list (86)
    on left: 25 26, on right: 24
member_decl (87)
    on left: 27, on right: 24
id_list (88)
    on left: 28 29, on right: 27 29
aliasing (89)
    on left: 30, on right: 16
expression_statement (90)
    on left: 31 32, on right: 5
jump_statement (91)
    on left: 33 34 35, on right: 4
iterative_statement (92)
    on left: 36, on right: 8
while_loop (93)
    on left: 37, on right: 36
while_clause (94)
    on left: 38, on right: 37
selection_statement (95)
    on left: 39 40, on right: 7
if_clause (96)
    on left: 41, on right: 39 40
else_clause (97)
    on left: 42, on right: 40
declaration_statement (98)
    on left: 43, on right: 3
var_dlist (99)
    on left: 44 45, on right: 43 44
var_definition (100)
    on left: 46, on right: 44 45
symbol_name (101)
    on left: 47 48 49 50, on right: 46 48 49 50
type_name (102)
    on left: 51 52 53 54 55, on right: 27 30 43 69
opt_init (103)
    on left: 56 57, on right: 46
primary_expr (104)
    on left: 58 59 60, on right: 61 89
expr (105)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 85 86 87 88 89, on right: 31 38 41 56 60 62 63
    64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86 87 88 89 90
indexing (106)
    on left: 90, on right: 62


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . statement

    $end        shift, and go to state 2
    error       shift, and go to state 3
    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    TYPEDEF     shift, and go to state 6
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    WHILE       shift, and go to state 12
    GOTO        shift, and go to state 13
    CONTINUE    shift, and go to state 14
    BREAK       shift, and go to state 15
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    IF          shift, and go to state 23
    ';'         shift, and go to state 24
    '('         shift, and go to state 25

    '{'  reduce using rule 14 (begin_sub)

    statement              go to state 26
    label_stmt             go to state 27
    block_statement        go to state 28
    begin_sub              go to state 29
    type_definition        go to state 30
    compound_type          go to state 31
    type_type              go to state 32
    aliasing               go to state 33
    expression_statement   go to state 34
    jump_statement         go to state 35
    iterative_statement    go to state 36
    while_loop             go to state 37
    while_clause           go to state 38
    selection_statement    go to state 39
    if_clause              go to state 40
    declaration_statement  go to state 41
    type_name              go to state 42
    primary_expr           go to state 43
    expr                   go to state 44


state 2

    0 $accept: input $end .

    $default  accept


state 3

    6 statement: error .

    $default  reduce using rule 6 (statement)


state 4

   67 expr: INC_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 46


state 5

   68 expr: DEC_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 47


state 6

   30 aliasing: TYPEDEF . type_name IDENTIFIER

    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    ALIAS_NAME  shift, and go to state 18

    compound_type  go to state 48
    type_type      go to state 32
    type_name      go to state 49


state 7

   53 type_name: CHAR .

    $default  reduce using rule 53 (type_name)


state 8

   51 type_name: INT .

    $default  reduce using rule 51 (type_name)


state 9

   52 type_name: FLOAT .

    $default  reduce using rule 52 (type_name)


state 10

   20 type_type: STRUCT .

    $default  reduce using rule 20 (type_type)


state 11

   21 type_type: UNION .

    $default  reduce using rule 21 (type_type)


state 12

   38 while_clause: WHILE . '(' expr ')'

    '('  shift, and go to state 50


state 13

   35 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 51


state 14

   33 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 52


state 15

   34 jump_statement: BREAK . ';'

    ';'  shift, and go to state 53


state 16

   58 primary_expr: CONSTANT .

    $default  reduce using rule 58 (primary_expr)


state 17

   12 label_stmt: IDENTIFIER . ':'
   59 primary_expr: IDENTIFIER .

    ':'  shift, and go to state 54

    $default  reduce using rule 59 (primary_expr)


state 18

   55 type_name: ALIAS_NAME .

    $default  reduce using rule 55 (type_name)


state 19

   66 expr: '-' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 55


state 20

   70 expr: '*' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 56


state 21

   64 expr: '!' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 57


state 22

   65 expr: '~' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 58


state 23

   41 if_clause: IF . '(' expr ')'

    '('  shift, and go to state 59


state 24

   32 expression_statement: ';' .

    $default  reduce using rule 32 (expression_statement)


state 25

   60 primary_expr: '(' . expr ')'
   69 expr: '(' . type_name ')' expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    compound_type  go to state 48
    type_type      go to state 32
    type_name      go to state 60
    primary_expr   go to state 43
    expr           go to state 61


state 26

    2 input: input statement .

    $default  reduce using rule 2 (input)


state 27

   10 statement: label_stmt .

    $default  reduce using rule 10 (statement)


state 28

    9 statement: block_statement .

    $default  reduce using rule 9 (statement)


state 29

   13 block_statement: begin_sub . '{' input '}' end_sub

    '{'  shift, and go to state 62


state 30

   11 statement: type_definition .

    $default  reduce using rule 11 (statement)


state 31

   17 type_definition: compound_type . ';'
   54 type_name: compound_type .

    ';'  shift, and go to state 63

    $default  reduce using rule 54 (type_name)


state 32

   18 compound_type: type_type . opt_typ_name '{' member_decl_list '}'
   19              | type_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 64

    $default  reduce using rule 22 (opt_typ_name)

    opt_typ_name  go to state 65


state 33

   16 type_definition: aliasing . ';'

    ';'  shift, and go to state 66


state 34

    5 statement: expression_statement .

    $default  reduce using rule 5 (statement)


state 35

    4 statement: jump_statement .

    $default  reduce using rule 4 (statement)


state 36

    8 statement: iterative_statement .

    $default  reduce using rule 8 (statement)


state 37

   36 iterative_statement: while_loop .

    $default  reduce using rule 36 (iterative_statement)


state 38

   37 while_loop: while_clause . statement

    error       shift, and go to state 3
    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    TYPEDEF     shift, and go to state 6
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    WHILE       shift, and go to state 12
    GOTO        shift, and go to state 13
    CONTINUE    shift, and go to state 14
    BREAK       shift, and go to state 15
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    IF          shift, and go to state 23
    ';'         shift, and go to state 24
    '('         shift, and go to state 25

    '{'  reduce using rule 14 (begin_sub)

    statement              go to state 67
    label_stmt             go to state 27
    block_statement        go to state 28
    begin_sub              go to state 29
    type_definition        go to state 30
    compound_type          go to state 31
    type_type              go to state 32
    aliasing               go to state 33
    expression_statement   go to state 34
    jump_statement         go to state 35
    iterative_statement    go to state 36
    while_loop             go to state 37
    while_clause           go to state 38
    selection_statement    go to state 39
    if_clause              go to state 40
    declaration_statement  go to state 41
    type_name              go to state 42
    primary_expr           go to state 43
    expr                   go to state 44


state 39

    7 statement: selection_statement .

    $default  reduce using rule 7 (statement)


state 40

   39 selection_statement: if_clause . statement
   40                    | if_clause . statement else_clause statement

    error       shift, and go to state 3
    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    TYPEDEF     shift, and go to state 6
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    WHILE       shift, and go to state 12
    GOTO        shift, and go to state 13
    CONTINUE    shift, and go to state 14
    BREAK       shift, and go to state 15
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    IF          shift, and go to state 23
    ';'         shift, and go to state 24
    '('         shift, and go to state 25

    '{'  reduce using rule 14 (begin_sub)

    statement              go to state 68
    label_stmt             go to state 27
    block_statement        go to state 28
    begin_sub              go to state 29
    type_definition        go to state 30
    compound_type          go to state 31
    type_type              go to state 32
    aliasing               go to state 33
    expression_statement   go to state 34
    jump_statement         go to state 35
    iterative_statement    go to state 36
    while_loop             go to state 37
    while_clause           go to state 38
    selection_statement    go to state 39
    if_clause              go to state 40
    declaration_statement  go to state 41
    type_name              go to state 42
    primary_expr           go to state 43
    expr                   go to state 44


state 41

    3 statement: declaration_statement .

    $default  reduce using rule 3 (statement)


state 42

   43 declaration_statement: type_name . var_dlist ';'

    IDENTIFIER  shift, and go to state 69
    '*'         shift, and go to state 70
    '('         shift, and go to state 71

    var_dlist       go to state 72
    var_definition  go to state 73
    symbol_name     go to state 74


state 43

   61 expr: primary_expr .
   89     | primary_expr . '=' expr

    '='  shift, and go to state 75

    $default  reduce using rule 61 (expr)


state 44

   31 expression_statement: expr . ';'
   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95
    ';'       shift, and go to state 96

    indexing  go to state 97


state 45

   59 primary_expr: IDENTIFIER .

    $default  reduce using rule 59 (primary_expr)


state 46

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   67     | INC_OP expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 67 (expr)

    indexing  go to state 97


state 47

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   68     | DEC_OP expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 68 (expr)

    indexing  go to state 97


state 48

   54 type_name: compound_type .

    $default  reduce using rule 54 (type_name)


state 49

   30 aliasing: TYPEDEF type_name . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


state 50

   38 while_clause: WHILE '(' . expr ')'

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 99


state 51

   35 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 100


state 52

   33 jump_statement: CONTINUE ';' .

    $default  reduce using rule 33 (jump_statement)


state 53

   34 jump_statement: BREAK ';' .

    $default  reduce using rule 34 (jump_statement)


state 54

   12 label_stmt: IDENTIFIER ':' .

    $default  reduce using rule 12 (label_stmt)


state 55

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   66     | '-' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 66 (expr)

    indexing  go to state 97


state 56

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   70     | '*' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 70 (expr)

    indexing  go to state 97


state 57

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   64     | '!' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 64 (expr)

    indexing  go to state 97


state 58

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   65     | '~' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 65 (expr)

    indexing  go to state 97


state 59

   41 if_clause: IF '(' . expr ')'

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 101


state 60

   69 expr: '(' type_name . ')' expr

    ')'  shift, and go to state 102


state 61

   60 primary_expr: '(' expr . ')'
   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    ')'       shift, and go to state 103
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    indexing  go to state 97


state 62

   13 block_statement: begin_sub '{' . input '}' end_sub

    $default  reduce using rule 1 (input)

    input  go to state 104


state 63

   17 type_definition: compound_type ';' .

    $default  reduce using rule 17 (type_definition)


state 64

   19 compound_type: type_type IDENTIFIER .
   23 opt_typ_name: IDENTIFIER .

    '{'       reduce using rule 23 (opt_typ_name)
    $default  reduce using rule 19 (compound_type)


state 65

   18 compound_type: type_type opt_typ_name . '{' member_decl_list '}'

    '{'  shift, and go to state 105


state 66

   16 type_definition: aliasing ';' .

    $default  reduce using rule 16 (type_definition)


state 67

   37 while_loop: while_clause statement .

    $default  reduce using rule 37 (while_loop)


state 68

   39 selection_statement: if_clause statement .
   40                    | if_clause statement . else_clause statement

    ELSE  shift, and go to state 106

    ELSE      [reduce using rule 39 (selection_statement)]
    $default  reduce using rule 39 (selection_statement)

    else_clause  go to state 107


state 69

   47 symbol_name: IDENTIFIER .

    $default  reduce using rule 47 (symbol_name)


state 70

   49 symbol_name: '*' . symbol_name

    IDENTIFIER  shift, and go to state 69
    '*'         shift, and go to state 70
    '('         shift, and go to state 71

    symbol_name  go to state 108


state 71

   50 symbol_name: '(' . symbol_name ')'

    IDENTIFIER  shift, and go to state 69
    '*'         shift, and go to state 70
    '('         shift, and go to state 71

    symbol_name  go to state 109


state 72

   43 declaration_statement: type_name var_dlist . ';'

    ';'  shift, and go to state 110


state 73

   44 var_dlist: var_definition . ',' var_dlist
   45          | var_definition .

    ','  shift, and go to state 111

    $default  reduce using rule 45 (var_dlist)


state 74

   46 var_definition: symbol_name . opt_init
   48 symbol_name: symbol_name . '[' CONSTANT ']'

    '='  shift, and go to state 112
    '['  shift, and go to state 113

    $default  reduce using rule 57 (opt_init)

    opt_init  go to state 114


state 75

   89 expr: primary_expr '=' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 115


state 76

   88 expr: expr OR_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 116


state 77

   87 expr: expr AND_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 117


state 78

   82 expr: expr EQ_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 118


state 79

   83 expr: expr NE_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 119


state 80

   80 expr: expr LE_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 120


state 81

   81 expr: expr GE_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 121


state 82

   76 expr: expr LSHFT_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 122


state 83

   77 expr: expr RSHFT_OP . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 123


state 84

   86 expr: expr '&' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 124


state 85

   85 expr: expr '^' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 125


state 86

   84 expr: expr '|' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 126


state 87

   79 expr: expr '<' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 127


state 88

   78 expr: expr '>' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 128


state 89

   75 expr: expr '-' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 129


state 90

   74 expr: expr '+' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 130


state 91

   71 expr: expr '*' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 131


state 92

   72 expr: expr '/' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 132


state 93

   73 expr: expr '%' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 133


state 94

   63 expr: expr '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 134


state 95

   90 indexing: '[' . expr ']'

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 135


state 96

   31 expression_statement: expr ';' .

    $default  reduce using rule 31 (expression_statement)


state 97

   62 expr: expr indexing .

    $default  reduce using rule 62 (expr)


state 98

   30 aliasing: TYPEDEF type_name IDENTIFIER .

    $default  reduce using rule 30 (aliasing)


state 99

   38 while_clause: WHILE '(' expr . ')'
   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    ')'       shift, and go to state 136
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    indexing  go to state 97


state 100

   35 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 35 (jump_statement)


state 101

   41 if_clause: IF '(' expr . ')'
   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    ')'       shift, and go to state 137
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    indexing  go to state 97


state 102

   69 expr: '(' type_name ')' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 138


state 103

   60 primary_expr: '(' expr ')' .

    $default  reduce using rule 60 (primary_expr)


state 104

    2 input: input . statement
   13 block_statement: begin_sub '{' input . '}' end_sub

    error       shift, and go to state 3
    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    TYPEDEF     shift, and go to state 6
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    WHILE       shift, and go to state 12
    GOTO        shift, and go to state 13
    CONTINUE    shift, and go to state 14
    BREAK       shift, and go to state 15
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    IF          shift, and go to state 23
    '}'         shift, and go to state 139
    ';'         shift, and go to state 24
    '('         shift, and go to state 25

    '{'  reduce using rule 14 (begin_sub)

    statement              go to state 26
    label_stmt             go to state 27
    block_statement        go to state 28
    begin_sub              go to state 29
    type_definition        go to state 30
    compound_type          go to state 31
    type_type              go to state 32
    aliasing               go to state 33
    expression_statement   go to state 34
    jump_statement         go to state 35
    iterative_statement    go to state 36
    while_loop             go to state 37
    while_clause           go to state 38
    selection_statement    go to state 39
    if_clause              go to state 40
    declaration_statement  go to state 41
    type_name              go to state 42
    primary_expr           go to state 43
    expr                   go to state 44


state 105

   18 compound_type: type_type opt_typ_name '{' . member_decl_list '}'

    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    ALIAS_NAME  shift, and go to state 18

    compound_type     go to state 48
    type_type         go to state 32
    member_decl_list  go to state 140
    member_decl       go to state 141
    type_name         go to state 142


state 106

   42 else_clause: ELSE .

    $default  reduce using rule 42 (else_clause)


state 107

   40 selection_statement: if_clause statement else_clause . statement

    error       shift, and go to state 3
    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    TYPEDEF     shift, and go to state 6
    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    WHILE       shift, and go to state 12
    GOTO        shift, and go to state 13
    CONTINUE    shift, and go to state 14
    BREAK       shift, and go to state 15
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    ALIAS_NAME  shift, and go to state 18
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    IF          shift, and go to state 23
    ';'         shift, and go to state 24
    '('         shift, and go to state 25

    '{'  reduce using rule 14 (begin_sub)

    statement              go to state 143
    label_stmt             go to state 27
    block_statement        go to state 28
    begin_sub              go to state 29
    type_definition        go to state 30
    compound_type          go to state 31
    type_type              go to state 32
    aliasing               go to state 33
    expression_statement   go to state 34
    jump_statement         go to state 35
    iterative_statement    go to state 36
    while_loop             go to state 37
    while_clause           go to state 38
    selection_statement    go to state 39
    if_clause              go to state 40
    declaration_statement  go to state 41
    type_name              go to state 42
    primary_expr           go to state 43
    expr                   go to state 44


state 108

   48 symbol_name: symbol_name . '[' CONSTANT ']'
   49            | '*' symbol_name .

    '['  shift, and go to state 113

    $default  reduce using rule 49 (symbol_name)


state 109

   48 symbol_name: symbol_name . '[' CONSTANT ']'
   50            | '(' symbol_name . ')'

    ')'  shift, and go to state 144
    '['  shift, and go to state 113


state 110

   43 declaration_statement: type_name var_dlist ';' .

    $default  reduce using rule 43 (declaration_statement)


state 111

   44 var_dlist: var_definition ',' . var_dlist

    IDENTIFIER  shift, and go to state 69
    '*'         shift, and go to state 70
    '('         shift, and go to state 71

    var_dlist       go to state 145
    var_definition  go to state 73
    symbol_name     go to state 74


state 112

   56 opt_init: '=' . expr

    INC_OP      shift, and go to state 4
    DEC_OP      shift, and go to state 5
    CONSTANT    shift, and go to state 16
    IDENTIFIER  shift, and go to state 45
    '-'         shift, and go to state 19
    '*'         shift, and go to state 20
    '!'         shift, and go to state 21
    '~'         shift, and go to state 22
    '('         shift, and go to state 25

    primary_expr  go to state 43
    expr          go to state 146


state 113

   48 symbol_name: symbol_name '[' . CONSTANT ']'

    CONSTANT  shift, and go to state 147


state 114

   46 var_definition: symbol_name opt_init .

    $default  reduce using rule 46 (var_definition)


state 115

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr
   89     | primary_expr '=' expr .

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 89 (expr)

    indexing  go to state 97


state 116

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr
   88     | expr OR_OP expr .

    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 88 (expr)

    indexing  go to state 97


state 117

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   87     | expr AND_OP expr .
   88     | expr . OR_OP expr

    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 87 (expr)

    indexing  go to state 97


state 118

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   82     | expr EQ_OP expr .
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 82 (expr)

    indexing  go to state 97


state 119

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   83     | expr NE_OP expr .
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 83 (expr)

    indexing  go to state 97


state 120

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   80     | expr LE_OP expr .
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 80 (expr)

    indexing  go to state 97


state 121

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   81     | expr GE_OP expr .
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 81 (expr)

    indexing  go to state 97


state 122

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   76     | expr LSHFT_OP expr .
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '-'  shift, and go to state 89
    '+'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93
    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 76 (expr)

    indexing  go to state 97


state 123

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   77     | expr RSHFT_OP expr .
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '-'  shift, and go to state 89
    '+'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93
    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 77 (expr)

    indexing  go to state 97


state 124

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   86     | expr '&' expr .
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 86 (expr)

    indexing  go to state 97


state 125

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   85     | expr '^' expr .
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 85 (expr)

    indexing  go to state 97


state 126

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   84     | expr '|' expr .
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 84 (expr)

    indexing  go to state 97


state 127

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   79     | expr '<' expr .
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 79 (expr)

    indexing  go to state 97


state 128

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   78     | expr '>' expr .
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 78 (expr)

    indexing  go to state 97


state 129

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   75     | expr '-' expr .
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93
    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 75 (expr)

    indexing  go to state 97


state 130

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   74     | expr '+' expr .
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93
    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 74 (expr)

    indexing  go to state 97


state 131

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   71     | expr '*' expr .
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 71 (expr)

    indexing  go to state 97


state 132

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   72     | expr '/' expr .
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 72 (expr)

    indexing  go to state 97


state 133

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   73     | expr '%' expr .
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 73 (expr)

    indexing  go to state 97


state 134

   63 expr: expr '.' IDENTIFIER .

    $default  reduce using rule 63 (expr)


state 135

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr
   90 indexing: '[' expr . ']'

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95
    ']'       shift, and go to state 148

    indexing  go to state 97


state 136

   38 while_clause: WHILE '(' expr ')' .

    $default  reduce using rule 38 (while_clause)


state 137

   41 if_clause: IF '(' expr ')' .

    $default  reduce using rule 41 (if_clause)


state 138

   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   69     | '(' type_name ')' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 69 (expr)

    indexing  go to state 97


state 139

   13 block_statement: begin_sub '{' input '}' . end_sub

    $default  reduce using rule 15 (end_sub)

    end_sub  go to state 149


state 140

   18 compound_type: type_type opt_typ_name '{' member_decl_list . '}'

    '}'  shift, and go to state 150


state 141

   24 member_decl_list: member_decl . opt_member_decl_list

    CHAR        shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    STRUCT      shift, and go to state 10
    UNION       shift, and go to state 11
    ALIAS_NAME  shift, and go to state 18

    $default  reduce using rule 25 (opt_member_decl_list)

    compound_type         go to state 48
    type_type             go to state 32
    member_decl_list      go to state 151
    opt_member_decl_list  go to state 152
    member_decl           go to state 141
    type_name             go to state 142


state 142

   27 member_decl: type_name . id_list ';'

    IDENTIFIER  shift, and go to state 153

    id_list  go to state 154


state 143

   40 selection_statement: if_clause statement else_clause statement .

    $default  reduce using rule 40 (selection_statement)


state 144

   50 symbol_name: '(' symbol_name ')' .

    $default  reduce using rule 50 (symbol_name)


state 145

   44 var_dlist: var_definition ',' var_dlist .

    $default  reduce using rule 44 (var_dlist)


state 146

   56 opt_init: '=' expr .
   62 expr: expr . indexing
   63     | expr . '.' IDENTIFIER
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . '+' expr
   75     | expr . '-' expr
   76     | expr . LSHFT_OP expr
   77     | expr . RSHFT_OP expr
   78     | expr . '>' expr
   79     | expr . '<' expr
   80     | expr . LE_OP expr
   81     | expr . GE_OP expr
   82     | expr . EQ_OP expr
   83     | expr . NE_OP expr
   84     | expr . '|' expr
   85     | expr . '^' expr
   86     | expr . '&' expr
   87     | expr . AND_OP expr
   88     | expr . OR_OP expr

    OR_OP     shift, and go to state 76
    AND_OP    shift, and go to state 77
    EQ_OP     shift, and go to state 78
    NE_OP     shift, and go to state 79
    LE_OP     shift, and go to state 80
    GE_OP     shift, and go to state 81
    LSHFT_OP  shift, and go to state 82
    RSHFT_OP  shift, and go to state 83
    '&'       shift, and go to state 84
    '^'       shift, and go to state 85
    '|'       shift, and go to state 86
    '<'       shift, and go to state 87
    '>'       shift, and go to state 88
    '-'       shift, and go to state 89
    '+'       shift, and go to state 90
    '*'       shift, and go to state 91
    '/'       shift, and go to state 92
    '%'       shift, and go to state 93
    '.'       shift, and go to state 94
    '['       shift, and go to state 95

    $default  reduce using rule 56 (opt_init)

    indexing  go to state 97


state 147

   48 symbol_name: symbol_name '[' CONSTANT . ']'

    ']'  shift, and go to state 155


state 148

   90 indexing: '[' expr ']' .

    $default  reduce using rule 90 (indexing)


state 149

   13 block_statement: begin_sub '{' input '}' end_sub .

    $default  reduce using rule 13 (block_statement)


state 150

   18 compound_type: type_type opt_typ_name '{' member_decl_list '}' .

    $default  reduce using rule 18 (compound_type)


state 151

   26 opt_member_decl_list: member_decl_list .

    $default  reduce using rule 26 (opt_member_decl_list)


state 152

   24 member_decl_list: member_decl opt_member_decl_list .

    $default  reduce using rule 24 (member_decl_list)


state 153

   28 id_list: IDENTIFIER .
   29        | IDENTIFIER . ',' id_list

    ','  shift, and go to state 156

    $default  reduce using rule 28 (id_list)


state 154

   27 member_decl: type_name id_list . ';'

    ';'  shift, and go to state 157


state 155

   48 symbol_name: symbol_name '[' CONSTANT ']' .

    $default  reduce using rule 48 (symbol_name)


state 156

   29 id_list: IDENTIFIER ',' . id_list

    IDENTIFIER  shift, and go to state 153

    id_list  go to state 158


state 157

   27 member_decl: type_name id_list ';' .

    $default  reduce using rule 27 (member_decl)


state 158

   29 id_list: IDENTIFIER ',' id_list .

    $default  reduce using rule 29 (id_list)
